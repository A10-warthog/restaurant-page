(()=>{"use strict";var n={234:(n,t,e)=>{e.d(t,{Z:()=>d});var r=e(537),o=e.n(r),i=e(645),a=e.n(i),s=e(667),c=e.n(s),A=new URL(e(214),e.b),l=a()(o());l.push([n.id,"@import url(https://fonts.googleapis.com/css?family=Allura);"]);var m=c()(A);l.push([n.id,'h3,\r\np,\r\nh2,\r\nbody,\r\ndiv,\r\nspan,\r\nbutton {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n  width: 0.3rem;\r\n  background-color: #000000;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: #333;\r\n  border-radius: 0.2rem;\r\n}\r\n\r\n.content {\r\n  max-width: 100vw;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  background-color: #000000;\r\n  color: #ffffff;\r\n  font-family: "Allura";\r\n  font-size: 1.5rem;\r\n  word-spacing: 2px;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.content > :last-child {\r\n  padding-top: 10vh;\r\n}\r\n\r\n.button {\r\n  width: 100vw;\r\n  min-height: 10vh;\r\n  position: fixed;\r\n  top: 0rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5rem;\r\n  background-color: #000000;\r\n}\r\n\r\n.button__page {\r\n  border: none;\r\n  outline: none;\r\n  position: relative;\r\n  background-color: transparent;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  font-family: "Allura";\r\n  font-size: 1.7rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: padding ease-in-out 170ms;\r\n}\r\n\r\n.button__page--active {\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 2px solid #ffb200;\r\n}\r\n\r\n.button__page::before {\r\n  content: "";\r\n  height: 100%;\r\n  width: 0%;\r\n  position: absolute;\r\n  border-bottom: 2px solid white;\r\n  transition: width ease 200ms;\r\n}\r\n\r\n.button__page:not(button.button__page--active):hover::before {\r\n  width: 100%;\r\n}\r\n\r\n.home {\r\n  min-height: 90vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  column-gap: 1.5rem;\r\n  padding: 0rem 1rem;\r\n}\r\n\r\n.home__image {\r\n  flex: 1 1 30%;\r\n  height: 80vh;\r\n  background-image: url('+m+");\r\n  background-size: cover;\r\n}\r\n\r\n.home__box {\r\n  flex: 1 1 60%;\r\n  text-align: center;\r\n}\r\n\r\n.home__title {\r\n  font-size: 7rem;\r\n  color: #6d9730;\r\n}\r\n\r\n.home__sub_title {\r\n  font-size: 1.8rem;\r\n}\r\n\r\n.home__description {\r\n  padding: 1rem clamp(5rem, 10vw, 10rem);\r\n}\r\n\r\n.menu {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.menu__title {\r\n  font-size: 4rem;\r\n  padding-top: 2rem;\r\n}\r\n\r\n.menu__sub_menu_box {\r\n  max-width: 60%;\r\n  padding-bottom: 1rem;\r\n  margin: auto;\r\n}\r\n\r\n.menu__sub_title {\r\n  padding: 1rem 0;\r\n  font-size: 2rem;\r\n}\r\n\r\n.menu__dish {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.menu__dish_name {\r\n  color: #e8c365;\r\n}\r\n\r\n.contact__box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  padding-top: 3rem;\r\n}\r\n\r\n.contact__title {\r\n  font-size: 4rem;\r\n}\r\n\r\n.contact__data {\r\n  font-size: 2rem;\r\n}\r\n","",{version:3,sources:["webpack://./src/my-component/styles/style.css"],names:[],mappings:"AAEA;;;;;;;EAOE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,yBAAyB;AAC3B;;AAEA;EACE,sBAAsB;EACtB,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB;EACzB,cAAc;EACd,qBAAqB;EACrB,iBAAiB;EACjB,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,eAAe;EACf,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,6BAA6B;EAC7B,cAAc;EACd,kBAAkB;EAClB,qBAAqB;EACrB,iBAAiB;EACjB,iBAAiB;EACjB,eAAe;EACf,qCAAqC;AACvC;;AAEA;EACE,sBAAsB;EACtB,gCAAgC;AAClC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,SAAS;EACT,kBAAkB;EAClB,8BAA8B;EAC9B,4BAA4B;AAC9B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,yDAAuE;EACvE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,oBAAoB;EACpB,YAAY;AACd;;AAEA;EACE,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB",sourcesContent:['@import url("https://fonts.googleapis.com/css?family=Allura");\r\n\r\nh3,\r\np,\r\nh2,\r\nbody,\r\ndiv,\r\nspan,\r\nbutton {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n  width: 0.3rem;\r\n  background-color: #000000;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: #333;\r\n  border-radius: 0.2rem;\r\n}\r\n\r\n.content {\r\n  max-width: 100vw;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  background-color: #000000;\r\n  color: #ffffff;\r\n  font-family: "Allura";\r\n  font-size: 1.5rem;\r\n  word-spacing: 2px;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.content > :last-child {\r\n  padding-top: 10vh;\r\n}\r\n\r\n.button {\r\n  width: 100vw;\r\n  min-height: 10vh;\r\n  position: fixed;\r\n  top: 0rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5rem;\r\n  background-color: #000000;\r\n}\r\n\r\n.button__page {\r\n  border: none;\r\n  outline: none;\r\n  position: relative;\r\n  background-color: transparent;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  font-family: "Allura";\r\n  font-size: 1.7rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: padding ease-in-out 170ms;\r\n}\r\n\r\n.button__page--active {\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 2px solid #ffb200;\r\n}\r\n\r\n.button__page::before {\r\n  content: "";\r\n  height: 100%;\r\n  width: 0%;\r\n  position: absolute;\r\n  border-bottom: 2px solid white;\r\n  transition: width ease 200ms;\r\n}\r\n\r\n.button__page:not(button.button__page--active):hover::before {\r\n  width: 100%;\r\n}\r\n\r\n.home {\r\n  min-height: 90vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  column-gap: 1.5rem;\r\n  padding: 0rem 1rem;\r\n}\r\n\r\n.home__image {\r\n  flex: 1 1 30%;\r\n  height: 80vh;\r\n  background-image: url("../images/calum-lewis-rPkgYDh2bmo-unsplash.jpg");\r\n  background-size: cover;\r\n}\r\n\r\n.home__box {\r\n  flex: 1 1 60%;\r\n  text-align: center;\r\n}\r\n\r\n.home__title {\r\n  font-size: 7rem;\r\n  color: #6d9730;\r\n}\r\n\r\n.home__sub_title {\r\n  font-size: 1.8rem;\r\n}\r\n\r\n.home__description {\r\n  padding: 1rem clamp(5rem, 10vw, 10rem);\r\n}\r\n\r\n.menu {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.menu__title {\r\n  font-size: 4rem;\r\n  padding-top: 2rem;\r\n}\r\n\r\n.menu__sub_menu_box {\r\n  max-width: 60%;\r\n  padding-bottom: 1rem;\r\n  margin: auto;\r\n}\r\n\r\n.menu__sub_title {\r\n  padding: 1rem 0;\r\n  font-size: 2rem;\r\n}\r\n\r\n.menu__dish {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.menu__dish_name {\r\n  color: #e8c365;\r\n}\r\n\r\n.contact__box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  padding-top: 3rem;\r\n}\r\n\r\n.contact__title {\r\n  font-size: 4rem;\r\n}\r\n\r\n.contact__data {\r\n  font-size: 2rem;\r\n}\r\n'],sourceRoot:""}]);const d=l},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},667:n=>{n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],A=r.base?c[0]+r.base:c[0],l=i[A]||0,m="".concat(A," ").concat(l);i[A]=l+1;var d=e(m),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)t[d].references++,t[d].updater(u);else{var p=o(u,r);r.byIndex=s,t.splice(s,0,{identifier:m,updater:p,references:1})}a.push(m)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);t[s].references--}for(var c=r(n,o),A=0;A<i.length;A++){var l=e(i[A]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},214:(n,t,e)=>{n.exports=e.p+"b7d4ad8e93f40f906f7b.jpg"}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var r=t.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),i=e(569),a=e.n(i),s=e(565),c=e.n(s),A=e(216),l=e.n(A),m=e(589),d=e.n(m),u=e(234),p={};p.styleTagTransform=d(),p.setAttributes=c(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),t()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const h=(n,...t)=>{0===t.length?n.classList.add(t[0]):t.forEach((t=>n.classList.add(t)))},f=(n,t)=>{n.textContent=t},E=(n,t)=>n.classList.remove(t),b=(n,...t)=>{1===t.length?n.appendChild(t[0]):t.forEach((t=>{n.appendChild(t)}))},g=n=>n.remove(),C=(n,t)=>n.getAttribute(t),B=(n,t,e)=>n.setAttribute(t,e),_=(n,t,e)=>n.addEventListener(t,e),v=(n,t)=>{const e=[];if(1===t)return document.createElement(n);for(let r=0;r<t;r+=1)e.push(document.createElement(n));return e},x=(()=>{const n=v("div",1);h(n,"button");const t=v("button",3).map(((n,t)=>(0===t&&(B(n,"data-name","home"),f(n,"Home")),1===t&&(B(n,"data-name","menu"),f(n,"Menu")),2===t&&(B(n,"data-name","contact"),f(n,"Contact")),h(n,"button__page"),n)));b(n,...t);const e={home:!0,menu:!1,contact:!1};return!0===e.home&&h(t.find((n=>"home"===C(n,"data-name"))),"button__page--active"),{buttonBox:n,changeState:n=>{Object.keys(e).forEach((t=>{e[t]=t===n})),t.forEach((t=>{C(t,"data-name")===n?h(t,"button__page--active"):E(t,"button__page--active")}))},state:e}})(),y=new class{#n;#t;#e;constructor({title:n,subTitle:t,description:e}){this.#n=n,this.#t=t,this.#e=e}#r=()=>{const n=v("div",1);h(n,"home");const t=v("div",1);h(t,"home__image");const e=v("div",1);h(e,"home__box");const r=v("h2",1);h(r,"home__title");const o=v("h3",1);h(o,"home__sub_title");const i=v("p",1);return h(i,"home__description"),{home:n,homeBox:e,title:r,subTitle:o,description:i,image:t}};#o=()=>{const n=this.#r();return f(n.title,this.#n),f(n.subTitle,this.#t),f(n.description,this.#e),n};#i=()=>{const n=this.#o(),t=Object.keys(n);b(n.home,n.image),b(n.home,n.homeBox);for(let e=0;e<t.length;e+=1)"home"!==t[e]&&"homeBox"!==t[e]&&"image"!==t[e]&&b(n.homeBox,n[t[e]]);return n.home};get div(){return this.#i()}set description(n){this.#e=n}set title(n){this.#n=n}set subTitle(n){this.#t=n}}({title:"The Italian Cuisine",subTitle:"Experience The Best of Italian Food and Wine",description:"The Italian Cuisine presents the most luscious, juicy, flavorful and mouth-watering where all the ingredients are hand picked by the chief."}),k=new class{#n;#a;#s;constructor({title:n,subTitle:t,list:e}){this.#n=n,this.#a=t,this.#s=e}#c=(()=>{const n=v("div",1);h(n,"menu");const t=v("h2",1);h(t,"menu__title");const e=v("div",1);h(e,"menu__menu_box");const r=v("h3",3).map(((n,t)=>(h(n,"menu__sub_title"),B(n,"data-id",`${t}`),n))),o=v("div",3).map((n=>(h(n,"menu__sub_menu_box"),n))),i=v("div",3).map((n=>(h(n,"menu__course_box"),n))),a=v("div",5).map((n=>{const t=v("div",2);return b(n,...t),n})),s=v("div",5).map((n=>{const t=v("div",2);return b(n,...t),n})),c=v("div",5).map((n=>{const t=v("div",2);return b(n,...t),n}));return[a,s,c].forEach(((n,t)=>{n.forEach((n=>{h(n,"menu__dish");const[...t]=n.children;t.forEach(((n,t)=>{0===t&&h(n,"menu__dish_name"),1===t&&h(n,"menu__dish_price")}))})),b(i[t],...n)})),o.forEach(((n,t)=>{const e=[r[t],i[t]];b(n,...e)})),b(e,...o),b(n,t,e),{title:t,subTitle:r,appetizer:a,mainCourse:s,drink:c,menu:n}})();#A=()=>{f(this.#c.title,this.#n),this.#c.subTitle.forEach(((n,t)=>{f(n,this.#a[t])})),this.#c.appetizer.forEach(((n,t)=>{f(n.firstElementChild,this.#s.appetizer[t][0]),f(n.lastElementChild,this.#s.appetizer[t][1])})),this.#c.mainCourse.forEach(((n,t)=>{f(n.firstElementChild,this.#s.mainCourse[t][0]),f(n.lastElementChild,this.#s.mainCourse[t][1])})),this.#c.drink.forEach(((n,t)=>{f(n.firstElementChild,this.#s.drink[t][0]),f(n.lastElementChild,this.#s.drink[t][1])}))};get div(){return this.#A(),this.#c.menu}}({title:"Menu",subTitle:["Appetizer","Main Course","Drinks"],list:{appetizer:[["Herbed Chickpea Bruschetta","$5.99"],["Michael Symon's Arancini","$6.35"],["Roasted Eggplant Caponata","$5.99"],["Focaccia col Formaggio","$3.99"],["Mushroom and Fontina Crostini","$7.99"]],mainCourse:[["Braised Chicken all'Arrabbiata","$20.54"],["Pea and Bacon Risotto","$15"],["Sardinian Stuffed Eggplant","$16.99"],["Osso Buco with Citrus Gremolata","$19"],["Smoky Pork Pappardelle","$14"]],drink:[["Prosecco","$8"],["Negroni","$7"],["Aperol Spritz","$5.99"],["Bellini","$6"],["Campari Soda","$4.55"]]}}),w=new class{#n;#l;#m;constructor({title:n,phone:t,email:e}){this.#n=n,this.#l=t,this.#m=e}#d=(()=>{const n=v("div",1);h(n,"contact");const t=v("div",1);h(t,"contact__box");const e=v("h2",1);h(e,"contact__title");const r=v("p",1);h(r,"contact__data");const o=v("span",1);h(o,"contact__phone_no");const i=v("p",1);h(i,"contact__data");const a=v("span",1);return h(a,"contact__email_id"),{contact:n,contactBox:t,title:e,phone:r,phoneNo:o,email:i,emailId:a}})();#u(){f(this.#d.title,this.#n),f(this.#d.phoneNo,this.#l),f(this.#d.emailId,this.#m),f(this.#d.phone,"Phone Number : "),f(this.#d.email,"Email : ")}#p(){this.#u();const{contact:n,contactBox:t,title:e,phone:r,email:o,phoneNo:i,emailId:a}=this.#d;return b(r,i),b(o,a),b(n,t),b(t,e),b(t,r),b(t,o),n}get div(){return this.#p()}}({title:"Contact",phone:"555-555-555",email:"someexpample@xyz.com"}),T=v("div",1);B(T,"id","content"),h(T,"content"),b(T,x.buttonBox,y.div),b(document.body,T),_(x.buttonBox,"click",(n=>{const t=C(n.target,"data-name");!1===x.state[t]&&(T.childNodes.length>0&&g(T.lastElementChild),"home"===t&&b(T,y.div),"menu"===t&&b(T,k.div),"contact"===t&&b(T,w.div),x.changeState(t))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,